my_widget_script={mouseNums:[],
init:function(mode,json_data){
var parsedJson=this.parseInitJson(json_data)
;this.initDynamicContent(parsedJson),
window.onresize=(()=>this.resize()),this.addEventListeners(),
this.parent_class.init(mode,()=>JSON.stringify(parsedJson.widgetData)),
this.addRequiredFieldIndicators(),
this.setUpInitialState(),this.adjustForMode(mode),
this.checkForNames()},to_json:function(){
var widgetJsonString=this.parent_class.to_json(),dynamicContent=this.getDynamicContent(),output={
widgetData:JSON.parse(widgetJsonString),
mouseNums:this.mouseNums}
;return JSON.stringify(output)},
from_json:function(json_data){
var parsedJson=JSON.parse(json_data)
;this.parent_class.from_json(JSON.stringify(parsedJson.widgetData))
},test_data:function(){
var testData=JSON.parse(this.parent_class.test_data()),output={
widgetData:testData,mouseNums:[3,5]}
;return JSON.stringify(output)},
is_valid:function(b_suppress_message){
var fail=false,fail_log="",name
;if($("#the_form").find("select, textarea, input").each((i,e)=>{
if(!$(e).prop("required"));else if(!$(e).val())fail=true,
name=$(e).attr("id"),fail_log+=name+" is required \n"
}),$("input[type='date']").each((i,e)=>{
var date=$(e).val();if(date){
var validDate=this.isValidDate(date)
;if(!validDate)fail=true,fail_log+="Please enter valid date in form 'YYYY-MM-DD'"
}}),$("input[type='time']").each((i,e)=>{
var time=$(e).val();if(time){
var validtime=this.isValidTime(time)
;if(!validtime)fail=true,fail_log+="Please enter valid time in form 'hh:mm' - 24 hr time"
}}),fail)return bootbox.alert(fail_log);else{
var noErrors=[];return noErrors}},
is_edited:function(){
return this.parent_class.is_edited()},
reset_edited:function(){
return this.parent_class.reset_edited()},
parseInitJson:function(json_data){var jsonString
;if("string"===typeof json_data)jsonString=json_data;else jsonString=json_data()
;var parsedJson=JSON.parse(jsonString)
;return parsedJson},
initDynamicContent:function(parsedJson){
if(parsedJson.mouseNums)for(mouseNum of parsedJson.mouseNums)this.makeMouseCard(mouseNum)
},adjustForMode:function(mode){
if("edit"!==mode&&"edit_dev"!==mode)$(".disableOnView").prop("disabled",true),
$("input[type='date']").removeClass(".hasDatePicker"),
$(".hideView").hide();else $("input[type='date']").each((i,e)=>{
this.checkDateFormat($(e))
}),$("input[type='time']").each((i,e)=>{
this.checkTimeFormat($(e))})},
addEventListeners:function(){},
addRequiredFieldIndicators:function(){
$(".needForTableLab").each((i,e)=>{
$(e).html("<span class='hideView' style='color:blue'>#</span>"+$(e).html())
}),$(".requiredLab").each((i,e)=>{
$(e).html("<span class='hideView' style='color:red'>*</span>"+$(e).html())
})},isValidTime:function(timeString){
var regEx="^(((([0-1][0-9])|(2[0-3])):[0-5][0-9]))$"
;if(!timeString.match(regEx))return false;else return true
},isTimeSupported:function(){
var input=document.createElement("input")
;input.setAttribute("type","time")
;var supported=true
;if("time"!==input.type)supported=false
;return this.timeSupported=supported,input.remove(),
supported},timeSupported:true,
checkTimeFormat:function($timeInput){
if(!this.timeSupported){
$timeInput.next(".timeWarning").remove()
;var time=$timeInput.val(),isValid=this.isValidTime(time)
;if(!isValid)$timeInput.after('<div class="text-danger timeWarning">Enter time as "hh:mm" in 24-hr format</div>')
;this.resize()}},isValidDate:function(dateString){
var regEx=/^\d{4}-\d{2}-\d{2}$/
;if(!dateString.match(regEx))return false
;var d=new Date(dateString),dNum=d.getTime()
;if(!dNum&&0!==dNum)return false
;return d.toISOString().slice(0,10)===dateString},
isDateSupported:function(){
var input=document.createElement("input")
;input.setAttribute("type","date")
;var supported=true
;if("date"!==input.type)supported=false
;return this.dateSupported=supported,input.remove(),
supported},dateSupported:true,
checkDateFormat:function($dateInput){
if(!this.dateSupported){
$dateInput.next(".dateWarning").remove()
;var date=$dateInput.val(),isValid=this.isValidDate(date)
;if(!isValid)$dateInput.after('<div class="text-danger dateWarning">Enter date as "YYYY-MM-DD"</div>')
;$dateInput.datepicker({dateFormat:"yy-mm-dd"
}),this.resize()}},setUpInitialState:function(){
$(".myLeftCol").addClass("col-12 col-sm-6 col-md-4 col-lg-3 text-left text-sm-right"),
this.isDateSupported(),
this.isTimeSupported(),$("input[type='date']").prop("placeholder","YYYY-MM-DD").on("change",e=>{
this.checkDateFormat($(e.currentTarget))
}),$("input[type='time']").prop("placeholder","hh:mm").on("change",e=>{
this.checkTimeFormat($(e.target))
}),$("textarea.autoAdjust").each((i,e)=>{
e.setAttribute("style","height:"+e.scrollHeight+"px;overflow-y:hidden;")
}).on("input",e=>{
e.target.style.height="auto",e.target.style.height=e.target.scrollHeight+"px",
this.resize()}),$(".toggleTable").on("click",e=>{
var tableID=$(e.currentTarget).data("table"),$table=$("#"+tableID),$errorMsg=$("#errorMsg")
;this.toggleTableFuncs($table,$errorMsg)
}),$(".toCSV").on("click",e=>{
var tableID=$(e.currentTarget).data("table"),dateToday=luxon.DateTime.now().toISODate(),fileName="table_"+tableID+"_"+dateToday,$errorMsg=$("#errorMsg")
;this.toCSVFuncs(fileName,tableID,$errorMsg)
}),$(".copyData").on("click",e=>{
var tableID=$(e.currentTarget).data("table"),tableSearch=this.tableSearch(tableID),$copyHead=$(".copyHead"+tableSearch),$transpose=$(".transpose"+tableSearch),$tableToCopy=$("#"+tableID),$tableDiv=$tableToCopy.parent(),$errorMsg=$("#errorMsg"),$divForCopy=$("#forCopy")
;this.copyDataFuncs($copyHead,$tableToCopy,$tableDiv,$errorMsg,$divForCopy,$transpose)
}),$(".addMouse").on("click",e=>{
if(this.mouseNums.length>0)var lastMouse=this.mouseNums[this.mouseNums.length-1],mouseNum=lastMouse+1;else var mouseNum=1
;this.makeMouseCard(mouseNum)
}),$("#convertToTable").on("click",e=>{
var tableText=$("#pasteField").val(),makeFirstColHead=false,makeFirstRowHead=false
;if($("#makeColHead").is(":checked"))makeFirstColHead=true
;if($("#makeRowHead").is(":checked"))makeFirstRowHead=true
;var $divForTable=$(".forTable")
;this.rebuildTableFromStr(tableText,makeFirstRowHead,makeFirstColHead,$divForTable)
}),$("#the_form").on("input",e=>{
if($(e.target).data("watch"))this.watchValue($(e.target));else this.updateCalcFromEl(e.target)
}),
this.updateAllCalc(),this.mouseNums.forEach(e=>{
this.watchMouseID(e)}),this.resize()},
updateAllCalc:function(){
$("input, select, textarea").each((i,e)=>{
if("button"!=$(e).attr("type"))if($(e).data("watch"))this.watchValue($(e));else this.updateCalcFromEl(e)
}),this.resize()},resize:function(){
this.parent_class.resize_container()},
checkForNames:function(){
$("input, select, textarea").each((i,e)=>{
var thisName=$(e).attr("name")
;if(!thisName)console.log("There is no name attribute for: ",e.id);else{
var hasUpper=/[A-Z]/.test(thisName)
;if(hasUpper)console.log("The name contains an uppercase letter for: ",e.id)
}})},getDynamicContent:function(){
var dynamicContent={};return dynamicContent},
data_valid_form:function($errorMsg){
var valid=true,fail_log=$("<div></div>").append("Missing values for:"),name
;if($(".needForTable").each((i,e)=>{
if(!$(e).val())valid=false,name=$(e).attr("id"),
fail_log.append("<br/>"+name)
}),!valid)$errorMsg.html("<span style='color:red; font-size:36px;'>"+"Please fill out all elements marked by a"+"</span><span style='color:blue; font-size:36px;'>"+" blue #"+"</span>"),
$errorMsg.append(fail_log);else $errorMsg.html("")
;return this.resize(),valid},
runIfConfirmed:function(text,functionToCall,elForHeight=null){
var thisMessage="Are you sure?"
;if(text)thisMessage=text;var top="auto"
;if(elForHeight)top=elForHeight.offsetTop+"px"
;bootbox.confirm({message:thisMessage,
callback:proceed=>{if(proceed)functionToCall()}
}),$(".modal-dialog").css("top",top)},
dialogConfirm:function(text,functionToCall,elForHeight=null){
var thisMessage="Do you want to proceed?"
;if(text)thisMessage=text;var top="auto"
;if(elForHeight)top=elForHeight.offsetTop+"px"
;bootbox.confirm({message:thisMessage,
callback:result=>{functionToCall(result)}
}),$(".modal-dialog").css("top",top)},
runBasedOnInput:function(prompt,functionToCall,elForHeight=null){
var thisTitle="Enter value:"
;if(prompt)thisTitle=prompt;var top="auto"
;if(elForHeight)top=elForHeight.offsetTop+"px"
;bootbox.prompt({title:thisTitle,
callback:result=>{functionToCall(result)}
}),$(".modal-dialog").css("top",top)},
checkInArray:function(searchVal,array){
var proceed=-1!==$.inArray(searchVal,array)
;return proceed},
dataSearch:function(dataName,dataValue){
var dataSearch="[data-"+dataName+"='"+dataValue+"']"
;return dataSearch},tableSearch:function(table){
var tableSearch=this.dataSearch("table",table)
;return tableSearch},calcSearch:function(calc){
var calcSearch=this.dataSearch("calc",calc)
;return calcSearch},daySearch:function(day){
var daySearch=this.dataSearch("day",day)
;return daySearch},mouseSearch:function(mouse){
var mouseSearch=this.dataSearch("mouse",mouse)
;return mouseSearch},
updateCalcFromEl:function(el){
var calc=el.id,val=el.value,calcSearch=this.calcSearch(calc)
;$(calcSearch).html(val),this.resize()},
updateCalcFromVal:function(calc,val){
var calcSearch=this.calcSearch(calc)
;$(calcSearch).text(val),this.resize()},
watchValue:function($el){
var watch=$el.data("watch"),calcSearch=my_widget_script.calcSearch(watch),dayNum=$el.data("day"),mouseNum=$el.data("mouse"),val=$el.val()
;if(dayNum)calcSearch+=my_widget_script.daySearch(dayNum)
;if(mouseNum)calcSearch+=my_widget_script.mouseSearch(mouseNum)
;if("mouse"==watch)if(!val)val="Mouse "+mouseNum
;$(calcSearch).html(val),my_widget_script.resize()
},toggleTableFuncs:function($table,$errorMsg){
this.data_valid_form($errorMsg),$table.toggle(),
this.resize()},
toCSVFuncs:function(fileName,tableID,$errorMsg){
var data_valid=this.data_valid_form($errorMsg)
;if(data_valid)this.exportTableToCSV(fileName,tableID),
$errorMsg.html("<span style='color:grey; font-size:24px;'>Saved successfully</span>");else $errorMsg.append("<br/><span style='color:grey; font-size:24px;'>Did not export</span>")
},downloadCSV:function(csv,filename){
var csvFile,downloadLink;csvFile=new Blob([csv],{
type:"text/csv"
}),downloadLink=document.createElement("a"),downloadLink.download=filename,
downloadLink.href=window.URL.createObjectURL(csvFile),
downloadLink.style.display="none",
document.body.appendChild(downloadLink),downloadLink.click()
},exportTableToCSV:function(filename,table){
var tableArray=this.getTableArray($("#"+table),copyHead=true,transpose=false),tableString=this.convertRowArrayToString(tableArray,",","\n")
;this.downloadCSV(tableString,filename)},
copyDataFuncs:function($copyHead,$tableToCopy,$tableDiv,$errorMsg,$divForCopy,$transpose){
var data_valid=this.data_valid_form($errorMsg),copyHead=false,transpose=false
;if($copyHead.is(":checked"))copyHead=true
;if($transpose.is(":checked"))transpose=true
;if(data_valid)$tableDiv.show(),this.resize(),
this.copyTable($tableToCopy,copyHead,$divForCopy,$errorMsg,transpose),
$errorMsg.html("<span style='color:grey; font-size:24px;'>Copied successfully</span>");else $errorMsg.append("<br/><span style='color:grey; font-size:24px;'>Nothing was copied</span>")
},
copyTable:function($table,copyHead,$divForCopy,$errorMsg,transpose){
var tableArray=this.getTableArray($table,copyHead,transpose),tableString=this.convertRowArrayToString(tableArray,"\t","\n")
;this.copyStringToClipboard(tableString,$divForCopy,$errorMsg)
},
getTableArray:function($table,copyHead,transpose){
var rows=[],rowNum=0
;if(copyHead)$table.find("thead").children("tr").each((i,e)=>{
if(transpose)rowNum=0
;if($(e).find("td, th").each((i,e)=>{
if(void 0===rows[rowNum])rows[rowNum]=[]
;if(rows[rowNum].push($(e).text()),transpose)rowNum++
}),!transpose)rowNum++})
;return $table.find("tbody").children("tr").each((i,e)=>{
if(transpose)rowNum=0
;if($(e).find("td, th").each((i,e)=>{
if(void 0===rows[rowNum])rows[rowNum]=[]
;if(rows[rowNum].push($(e).text()),transpose)rowNum++
}),!transpose)rowNum++}),rows},
convertRowArrayToString:function(rowArray,cellSepString="\t",newRowString="\n"){
var rowString=[];rowArray.forEach(row=>{
if(row.length)row.forEach((cell,i)=>{
if(cell.includes(cellSepString)||cell.includes(newRowString))row[i]='"'+cell+'"'
}),rowString.push(row.join(cellSepString))})
;var tableString=rowString.join(newRowString)
;return tableString},
copyStringToClipboard:function(textStr,$divForCopy,$errorMsg){
var $temp=$("<text"+"area style='opacity:0;'></text"+"area>")
;if(textStr)errorStr="Copy attempted",
$errorMsg.html("<span style='color:grey; font-size:24px;'>Copy attempted</span>");else textStr=" ",
$errorMsg.html("<span style='color:red; font-size:24px;'>Nothing to copy</span>")
;$temp.text(textStr),
$temp.appendTo($divForCopy).select(),document.execCommand("copy"),
$temp.remove(),this.resize()},
toggleCard:function($cardHead){
$cardHead.next().toggleClass("collapse"),$cardHead.next().find("textarea.autoAdjust").each((i,e)=>{
if(!$(e).is(":hidden"))e.setAttribute("style","height:"+e.scrollHeight+"px;overflow-y:hidden;")
}),this.resize()},
makeCard:function($div,cardHeadContent,cardBodyContent){
$div.append($("<div></div>",{class:"card"
}).append($("<button></button>",{type:"button",
class:"card-header"}).on("click",e=>{
this.toggleCard($(e.currentTarget))
}).append(cardHeadContent)).append($("<div></div>",{
class:"card-body collapse"
}).append(cardBodyContent))),this.resize()},
watchMouseID:function(mouseNum){
var mouseSearch=this.mouseSearch(mouseNum),mouseID=$(".mouseID"+mouseSearch).val(),shortID=$(".shortID"+mouseSearch).val()
;if(!mouseID)mouseID="[Enter Mouse "+mouseNum+" ID]"
;if($(".mouseIDCalc"+mouseSearch).html(mouseID),
mouseID==shortID||!shortID)shortID="";else shortID=" - "+shortID
;$(".shortIDCalc"+mouseSearch).html(shortID)},
deleteMouseFuncs:function(mouseNum){
this.runIfConfirmed("Are you sure that you wish to delete this mouse?",()=>{
var index=this.mouseNums.indexOf(mouseNum)
;if(index>-1)this.mouseNums.splice(index,1)
;var mouseSearch=this.mouseSearch(mouseNum)
;$(".mouseCard"+mouseSearch).remove(),
$("tr"+mouseSearch).remove()}),this.resize()},
makeMouseCard:function(mouseNum){
var inArray=this.checkInArray(mouseNum,this.mouseNums)
;if(!inArray){this.mouseNums.push(mouseNum)
;var $div=$(".mouseInfo")
;if(!$div.find(".card").length)$div.html("")
;var row="row mt-2",col="col-12 col-lg-6"
;$div.append($("<div/>",{
class:"col col-md-6 mt-2 mouseCard",
"data-mouse":mouseNum}).append($("<div/>",{
class:"card"}).append($("<button></button>",{
type:"button",class:"card-header mouseIDCalc",
"data-mouse":mouseNum}).on("click",e=>{
this.toggleCard($(e.currentTarget))
}).append("[Enter Mouse ID]")).append($("<div/>",{
class:"card-body collapse"}).append($("<div/>",{
class:row}).append($("<div/>",{class:col
}).append("<h4>Mouse ID:</h4>")).append($("<div/>",{
class:"col"}).append($("<input/>",{type:"text",
"data-mouse":mouseNum,id:"mouseID"+mouseNum,
name:"mouseid"+mouseNum,
class:"mouseID fullWidth watch",
"data-watch":"mouseID"}).on("input",e=>{
this.watchMouseID($(e.currentTarget).data("mouse"))
})))).append($("<div/>",{class:row
}).append($("<div/>",{class:col
}).append("Short ID (for labels):")).append($("<div/>",{
class:"col"}).append($("<input/>",{type:"text",
"data-mouse":mouseNum,id:"shortID"+mouseNum,
name:"shortid"+mouseNum,
class:"shortID fullWidth watch",
"data-watch":"shortID"}).on("input",e=>{
this.watchMouseID($(e.currentTarget).data("mouse"))
})))).append($("<div/>",{class:row
}).append($("<div/>",{class:col
}).append("Treatment:")).append($("<div/>",{
class:"col"}).append($("<select/>",{
"data-mouse":mouseNum,id:"treatment"+mouseNum,
name:"treatment"+mouseNum,
class:"treatment fullWidth watch",
"data-watch":"treatment"
}).append('<option value="CON">Control</option><option value="TRT">Treatment</option>')))).append($("<div/>",{
class:row+" hideView"}).append($("<div/>",{
class:col}).append("Delete:")).append($("<div/>",{
class:"col"}).append($("<input/>",{type:"button",
value:"Delete Mouse","data-mouse":mouseNum,
id:"deleteMouse"+mouseNum,
name:"deletemouse"+mouseNum,
class:"deleteMouse fullWidth"}).on("click",e=>{
this.deleteMouseFuncs($(e.currentTarget).data("mouse"))
})))))));var $mouseTable=$("#mouseTable")
;$mouseTable.find("tbody").append($("<tr/>",{
"data-mouse":mouseNum}))
;for(var calcs=["mouseID","shortID","treatment"],mouseSearch=this.mouseSearch(mouseNum),i=0;i<calcs.length;i++){
var calc=calcs[i]
;$mouseTable.find("tbody").find("tr"+mouseSearch).append($("<td></td>",{
"data-calc":calc,"data-mouse":mouseNum}))}
this.updateAllCalc(),this.resize()}},
rebuildTableFromStr:function(textStr,makeFirstRowHead,makeFirstColHead,$tableDiv){
var rowArray=this.makeArrayFromStr(textStr)
;if(this.addedTable=textStr,void 0===$tableDiv||!$tableDiv)this.createTable(rowArray,makeFirstRowHead,makeFirstColHead);else this.createTable(rowArray,makeFirstRowHead,makeFirstColHead,$tableDiv)
;this.resize()},
makeArrayFromStr:function(textStr){
var results=Papa.parse(textStr,{
skipEmptyLines:true});return results.data},
createTable:function(tableData,makeFirstRowHead=false,makeFirstColHead=false,$tableDiv){
var table=document.createElement("table")
;table.classList.add("table")
;var tableBody=document.createElement("tbody")
;if(tableData.forEach((rowData,rowNum)=>{
var row=document.createElement("tr")
;rowData.forEach((cellData,colNum)=>{
if(makeFirstRowHead&&0==rowNum||makeFirstColHead&&0==colNum)var cell=document.createElement("th");else var cell=document.createElement("td")
;cell.appendChild(document.createTextNode(cellData)),
row.appendChild(cell)}),tableBody.appendChild(row)
}),table.appendChild(tableBody),
void 0===$tableDiv||!$tableDiv)console.log("appending generally"),
document.body.appendChild(table);else $tableDiv.html(""),
$tableDiv.append(table)},preview:function(){
var fileUpload=document.getElementById("fileUpload"),regex=/^([a-zA-Z0-9\s_\\.\-:])+(.csv|.txt)$/
;if(regex.test(fileUpload.value.toLowerCase()))if("undefined"!=typeof FileReader){
var reader=new FileReader;reader.onload=(e=>{
var csvText=e.target.result,makeFirstColHead=false,makeFirstRowHead=false
;if($("#makeColHead").is(":checked"))makeFirstColHead=true
;if($("#makeRowHead").is(":checked"))makeFirstRowHead=true
;var $divForTable=$(".forTable")
;this.rebuildTableFromStr(csvText,makeFirstRowHead,makeFirstColHead,$divForTable)
}),reader.readAsText(fileUpload.files[0])
}else bootbox.alert("This browser does not support HTML5.");else bootbox.alert("Please upload a valid CSV file.")
},upload:function(){var tableStr=this.addedTable
;if(tableStr){var byHeader=Papa.parse(tableStr,{
skipEmptyLines:true,header:true
}),dataByHeader=byHeader.data,headers=byHeader.meta.fields
;if(headers.join("")===["mouseID","shortID","treatment"].join("")){
for(obj of dataByHeader){
if(this.mouseNums.length>0)var lastMouse=this.mouseNums[this.mouseNums.length-1],mouseNum=lastMouse+1;else var mouseNum=1
;this.makeMouseCard(mouseNum)
;var mouseSearch=this.mouseSearch(mouseNum)
;for(header of headers)$("."+header+mouseSearch).val(obj[header])
;this.watchMouseID(mouseNum)}this.updateAllCalc()
}else bootbox.alert("Please use a table that has the headers of 'mouseID', 'shortID', and 'treatment' so that we know what to do with it")
}else bootbox.alert("Please either make an HTML table after pasting from Excel or preview a CSV file first")
}};